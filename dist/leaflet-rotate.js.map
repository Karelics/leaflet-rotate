{"version":3,"file":"leaflet-rotate.js","sources":["../src/dom/DomUtil.js","../src/dom/Draggable.js","../src/geometry/Point.js","../src/layer/DivOverlay.js","../src/layer/Popup.js","../src/layer/Tooltip.js","../src/layer/marker/Icon.js","../src/layer/marker/Marker.js","../src/layer/tile/GridLayer.js","../src/layer/vector/Canvas.js","../src/layer/vector/Renderer.js","../src/layer/vector/SVG.js","../src/map/Map.js","../src/map/handler/CompassBearing.js","../src/map/handler/ContainerMutation.js","../src/map/handler/TouchGestures.js","../src/map/handler/TouchRotate.js","../src/map/handler/ShiftKeyRotate.js","../src/map/handler/TouchZoom.js","../src/control/Rotate.js"],"sourcesContent":["/**\n * L.DomUtil\n */\nconst domUtilProto = L.extend({}, L.DomUtil);\n\nL.extend(L.DomUtil, {\n\n    setTransform: function(el, offset, scale, bearing, pivot) {\n        var pos = offset || new L.Point(0, 0);\n\n        if (!bearing) {\n            offset = pos._round();\n            return domUtilProto.setTransform.call(this, el, offset, scale);\n        }\n\n        pos = pos.rotateFrom(bearing, pivot);\n\n        el.style[L.DomUtil.TRANSFORM] =\n            'translate3d(' + pos.x + 'px,' + pos.y + 'px' + ',0)' +\n            (scale ? ' scale(' + scale + ')' : '') +\n            ' rotate(' + bearing + 'rad)';\n    },\n\n    setPosition: function(el, point, bearing, pivot) { // (HTMLElement, Point[, Boolean])\n        if (!bearing) {\n            return domUtilProto.setPosition.call(this, el, point);\n        }\n\n        /*eslint-disable */\n        el._leaflet_pos = point;\n        /*eslint-enable */\n\n        if (L.Browser.any3d) {\n            L.DomUtil.setTransform(el, point, undefined, bearing, pivot);\n        } else {\n            el.style.left = point.x + 'px';\n            el.style.top = point.y + 'px';\n        }\n    },\n\n    // Constants for rotation\n    DEG_TO_RAD: Math.PI / 180,\n    RAD_TO_DEG: 180 / Math.PI,\n\n});\r\n","/**\n * L.Draggable\n */\nL.Draggable.include({\n\n    updateMapBearing: function(mapBearing) {\n        this._mapBearing = mapBearing;\n    },\n\n});\r\n","/**\n * L.Point\n */\nL.extend(L.Point.prototype, {\n\n    // Rotate around (0,0) by applying the 2D rotation matrix:\n    // ⎡ x' ⎤ = ⎡ cos θ  -sin θ ⎤ ⎡ x ⎤\n    // ⎣ y' ⎦   ⎣ sin θ   cos θ ⎦ ⎣ y ⎦\n    // Theta must be given in radians.\n    rotate: function(theta) {\n        if (!theta) { return this; }\n        var sinTheta = Math.sin(theta);\n        var cosTheta = Math.cos(theta);\n\n        return new L.Point(\n            this.x * cosTheta - this.y * sinTheta,\n            this.x * sinTheta + this.y * cosTheta\n        );\n    },\n\n    // Rotate around (pivot.x, pivot.y) by:\n    // 1. subtract (pivot.x, pivot.y)\n    // 2. rotate around (0, 0)\n    // 3. add (pivot.x, pivot.y) back\n    // same as `this.subtract(pivot).rotate(theta).add(pivot)`\n    rotateFrom: function(theta, pivot) {\n        if (!theta) { return this; }\n        var sinTheta = Math.sin(theta);\n        var cosTheta = Math.cos(theta);\n        var cx = pivot.x,\n            cy = pivot.y;\n        var x = this.x - cx,\n            y = this.y - cy;\n\n        return new L.Point(\n            x * cosTheta - y * sinTheta + cx,\n            x * sinTheta + y * cosTheta + cy\n        );\n    },\n\n});\r\n","/**\n * L.DivOverlay\n */\nconst divOverlayProto = L.extend({}, L.DivOverlay.prototype);\n\nL.DivOverlay.include({\n\n    getEvents: function() {\n        return L.extend(divOverlayProto.getEvents.call(this), { rotate: this._updatePosition });\n    },\n\n    _updatePosition: function() {\n        if (!this._map) { return; }\n\n        var pos = this._map.latLngToLayerPoint(this._latlng),\n            offset = L.point(this.options.offset),\n            anchor = this._getAnchor();\n\n        if (this._zoomAnimated) {\n            // TODO: use divOverlayProto._updatePosition\n            if (this._map._rotate) {\n                pos = this._map.rotatedPointToMapPanePoint(pos);\n            }\n            L.DomUtil.setPosition(this._container, pos.add(anchor));\n        } else {\n            offset = offset.add(pos).add(anchor);\n        }\n\n        var bottom = this._containerBottom = -offset.y,\n            left = this._containerLeft = -Math.round(this._containerWidth / 2) + offset.x;\n\n        // bottom position the popup in case the height of the popup changes (images loading etc)\n        this._container.style.bottom = bottom + 'px';\n        this._container.style.left = left + 'px';\n    },\n\n});\n","/**\n * L.Popup\n */\nconst popupProto = L.extend({}, L.Popup.prototype);\n\nL.Popup.include({\n\n    _animateZoom: function(e) {\n        if (!this._map._rotate) {\n            popupProto._animateZoom.call(this, e);\n        }\n        var pos = this._map._latLngToNewLayerPoint(this._latlng, e.zoom, e.center),\n            anchor = this._getAnchor();\n\n        pos = this._map.rotatedPointToMapPanePoint(pos);\n\n        L.DomUtil.setPosition(this._container, pos.add(anchor));\n    },\n\n    _adjustPan: function() {\n        if (!this.options.autoPan || (this._map._panAnim && this._map._panAnim._inProgress)) { return; }\n\n        var map = this._map,\n            marginBottom = parseInt(L.DomUtil.getStyle(this._container, 'marginBottom'), 10) || 0,\n            containerHeight = this._container.offsetHeight + marginBottom,\n            containerWidth = this._containerWidth,\n            layerPos = new L.Point(this._containerLeft, -containerHeight - this._containerBottom);\n\n        layerPos._add(L.DomUtil.getPosition(this._container));\n\n        // var containerPos = map.layerPointToContainerPoint(layerPos);\n        // TODO: use popupProto._adjustPan\n        var containerPos = layerPos._add(this._map._getMapPanePos()),\n            padding = L.point(this.options.autoPanPadding),\n            paddingTL = L.point(this.options.autoPanPaddingTopLeft || padding),\n            paddingBR = L.point(this.options.autoPanPaddingBottomRight || padding),\n            size = map.getSize(),\n            dx = 0,\n            dy = 0;\n\n        if (containerPos.x + containerWidth + paddingBR.x > size.x) { // right\n            dx = containerPos.x + containerWidth - size.x + paddingBR.x;\n        }\n        if (containerPos.x - dx - paddingTL.x < 0) { // left\n            dx = containerPos.x - paddingTL.x;\n        }\n        if (containerPos.y + containerHeight + paddingBR.y > size.y) { // bottom\n            dy = containerPos.y + containerHeight - size.y + paddingBR.y;\n        }\n        if (containerPos.y - dy - paddingTL.y < 0) { // top\n            dy = containerPos.y - paddingTL.y;\n        }\n\n        // @namespace Map\n        // @section Popup events\n        // @event autopanstart: Event\n        // Fired when the map starts autopanning when opening a popup.\n        if (dx || dy) {\n            map\n                .fire('autopanstart')\n                .panBy([dx, dy]);\n        }\n    },\n\n});\n","/**\n * L.Tooltip\n */\nconst tooltipProto = L.extend({}, L.Tooltip.prototype);\n\nL.Tooltip.include({\n\n    _updatePosition: function() {\n        if (!this._map._rotate) {\n            return tooltipProto._updatePosition.call(this);\n        }\n        var pos = this._map.latLngToLayerPoint(this._latlng);\n\n        pos = this._map.rotatedPointToMapPanePoint(pos);\n        this._setPosition(pos);\n    },\n\n    _animateZoom: function(e) {\n        if (!this._map._rotate) {\n            return tooltipProto._animateZoom.call(this, e);\n        }\n        var pos = this._map._latLngToNewLayerPoint(this._latlng, e.zoom, e.center);\n\n        pos = this._map.rotatedPointToMapPanePoint(pos);\n        this._setPosition(pos);\n    },\n\n});\n","/**\n * L.Icon\n */\nconst iconProto = L.extend({}, L.Icon.prototype);\n\nL.Icon.include({\n\n    _setIconStyles: function(img, name) {\n        var options = this.options;\n        var sizeOption = options[name + 'Size'];\n\n        if (typeof sizeOption === 'number') {\n            sizeOption = [sizeOption, sizeOption];\n        }\n\n        var size = L.point(sizeOption),\n            anchor = L.point(name === 'shadow' && options.shadowAnchor || options.iconAnchor ||\n                size && size.divideBy(2, true));\n\n        img.className = 'leaflet-marker-' + name + ' ' + (options.className || '');\n\n        if (anchor) {\n            img.style.marginLeft = (-anchor.x) + 'px';\n            img.style.marginTop = (-anchor.y) + 'px';\n            // TODO: use iconProto._setIconStyles\n            img.style[L.DomUtil.TRANSFORM + \"Origin\"] = anchor.x + \"px \" + anchor.y + \"px 0px\";\n        }\n\n        if (size) {\n            img.style.width = size.x + 'px';\n            img.style.height = size.y + 'px';\n        }\n    },\n\n});\n","/**\n * L.Handler.MarkerDrag\n */\nvar markerDragProto;\n\nvar MarkerDrag = {\n\n    _onDragStart: function() {\n        if (!this._marker._map._rotate) {\n            return markerDragProto._onDragStart.call(this)\n        }\n        this._draggable.updateMapBearing(this._marker._map._bearing);\n    },\n\n    _onDrag: function(e) {\n        var marker = this._marker,\n            // TODO: use markerDragProto._onDrag\n            rotated_marker = marker.options.rotation || marker.options.rotateWithView,\n            shadow = marker._shadow,\n            iconPos = L.DomUtil.getPosition(marker._icon);\n\n        // TODO: use markerDragProto._onDrag\n        // update shadow position\n        if (!rotated_marker && shadow) {\n            L.DomUtil.setPosition(shadow, iconPos);\n        }\n\n        // TODO: use markerDragProto._onDrag\n        if (marker._map._rotate) {\n            // Reverse calculation from mapPane coordinates to rotatePane coordinates\n            iconPos = marker._map.mapPanePointToRotatedPoint(iconPos);\n        }\n        var latlng = marker._map.layerPointToLatLng(iconPos);\n\n        marker._latlng = latlng;\n        e.latlng = latlng;\n        e.oldLatLng = this._oldLatLng;\n\n        // TODO: use markerDragProto._onDrag\n        if (rotated_marker) marker.setLatLng(latlng); // use `setLatLng` to presisit rotation. low efficiency\n        else marker.fire('move', e); // `setLatLng` will trig 'move' event. we imitate here.\n\n        // @event drag: Event\n        // Fired repeatedly while the user drags the marker.\n        marker\n            .fire('drag', e);\n    },\n\n    _onDragEnd: function(e) {\n        if (this._marker._map._rotate) {\n            this._marker.update();\n        }\n        markerDragProto._onDragEnd.call(this, e);\n    },\n\n};\n\n/**\n * L.Marker\n */\nconst markerProto = L.extend({}, L.Marker.prototype);\n\nL.Marker.mergeOptions({\n\n    // @option rotation: Number = 0\n    // Rotation of this marker in rad\n    rotation: 0,\n\n    // @option rotateWithView: Boolean = false\n    // Rotate this marker when map rotates\n    rotateWithView: false,\n\n});\n\nL.Marker.include({\n\n    getEvents: function() {\n        return L.extend(markerProto.getEvents.call(this), { rotate: this.update });\n    },\n\n    onAdd: function(map) {\n        markerProto.onAdd.call(this, map);\n        map.on('rotate', this.update, this);\n    },\n\n    _initInteraction: function() {\n        var ret = markerProto._initInteraction.call(this);\n        if (this.dragging && this._map && this._map._rotate) {\n            // L.Handler.MarkerDrag is used internally by L.Marker to make the markers draggable\n            markerDragProto = markerDragProto || Object.getPrototypeOf(this.dragging);\n            this.dragging._onDragStart = MarkerDrag._onDragStart.bind(this.dragging);\n            this.dragging._onDrag = MarkerDrag._onDrag.bind(this.dragging);\n            this.dragging._onDragEnd = MarkerDrag._onDragEnd.bind(this.dragging);\n            this.dragging.disable();\n            this.dragging.enable();\n        }\n        return ret;\n    },\n\n    _setPos: function(pos) {\n\n        // TODO: use markerProto._setPos\n        if (this._map._rotate) {\n            pos = this._map.rotatedPointToMapPanePoint(pos);\n        }\n\n        // TODO: use markerProto._setPos\n        var bearing = this.options.rotation || 0;\n        if (this.options.rotateWithView) {\n            bearing += this._map._bearing;\n        }\n\n        // TODO: use markerProto._setPos\n        L.DomUtil.setPosition(this._icon, pos, bearing, pos);\n\n        // TODO: use markerProto._setPos\n        if (this._shadow) {\n            L.DomUtil.setPosition(this._shadow, pos, bearing, pos);\n        }\n\n        this._zIndex = pos.y + this.options.zIndexOffset;\n\n        this._resetZIndex();\n    },\n\n    _updateZIndex: function(offset) {\n        if (!this._map._rotate) {\n            return markerProto._updateZIndex.call(this, offset)\n        }\n        this._icon.style.zIndex = Math.round(this._zIndex + offset);\n    },\n\n    setRotation: function(rotation) {\n        this.options.rotation = rotation;\n        this.update();\n    },\n\n});\n","/**\n * L.GridLayer\n */\nconst gridLayerProto = L.extend({}, L.GridLayer.prototype);\n\nL.GridLayer.include({\n\n    getEvents: function() {\n        var events = gridLayerProto.getEvents.call(this);\n        if (this._map._rotate && !this.options.updateWhenIdle) {\n            if (!this._onRotate) {\n                this._onRotate = L.Util.throttle(this._onMoveEnd, this.options.updateInterval, this);\n            }\n            events.rotate = this._onRotate;\n        }\n        return events;\n    },\n\n    _getTiledPixelBounds: function(center) {\n        if (!this._map._rotate) {\n            return gridLayerProto._getTiledPixelBounds.call(this, center);\n        }\n\n        var map = this._map,\n            mapZoom = map._animatingZoom ? Math.max(map._animateToZoom, map.getZoom()) : map.getZoom(),\n            scale = map.getZoomScale(mapZoom, this._tileZoom),\n            pixelCenter = map.project(center, this._tileZoom).floor(),\n            size = map.getSize(),\n            halfSize = new L.Bounds([\n                map.containerPointToLayerPoint([0, 0]).floor(),\n                map.containerPointToLayerPoint([size.x, 0]).floor(),\n                map.containerPointToLayerPoint([0, size.y]).floor(),\n                map.containerPointToLayerPoint([size.x, size.y]).floor()\n            ]).getSize().divideBy(scale * 2);\n\n        return new L.Bounds(pixelCenter.subtract(halfSize), pixelCenter.add(halfSize));\n    },\n\n});\n","/**\n * L.Canvas\n */\nconst canvasProto = L.extend({}, L.Canvas.prototype);\n\nL.Canvas.include({\n\n    onAdd: function() {\n        canvasProto.onAdd.call(this);\n        // When rotating the canvas itself, it is cleared by some weird reason, so redraw.\n        this._map.on('rotate', this._redraw, this);\n    },\n\n    onRemove: function() {\n        canvasProto.onRemove.call(this);\n        this._map.off('rotate', this._redraw, this);\n    },\n\n    _update: function() {\n        canvasProto._update.call(this);\n        // Tell paths to redraw themselves\n        this.fire('update')\n    },\n\n});\n","/**\n * L.Renderer\n */\nconst rendererProto = L.extend({}, L.Renderer.prototype);\n\nL.Renderer.include({\n\n    onAdd: function() {\n        rendererProto.onAdd.call(this);\n        // this._map.on('rotate', this._update, this);\n    },\n\n    onRemove: function() {\n        rendererProto.onRemove.call(this);\n        // this._map.off('rotate', this._update, this);\n    },\n\n    _updateTransform: function(center, zoom) {\n        if (!this._map._rotate) {\n            return rendererProto._updateTransform.call(this, center, zoom);\n        }\n        var scale = this._map.getZoomScale(zoom, this._zoom),\n            offset = this._map._latLngToNewLayerPoint(this._topLeft, zoom, center);\n        if (L.Browser.any3d) {\n            L.DomUtil.setTransform(this._container, offset, scale);\n        } else {\n            L.DomUtil.setPosition(this._container, offset);\n        }\n    },\n\n    _update: function() {\n        if (!this._map._rotate) {\n            return rendererProto._update.call(this);\n        }\n        // Update pixel bounds of renderer container (for positioning/sizing/clipping later)\n        // Subclasses are responsible of firing the 'update' event.\n        var p = this.options.padding,\n            map = this._map,\n            size = this._map.getSize(),\n            padMin = size.multiplyBy(-p),\n            padMax = size.multiplyBy(1 + p),\n            //// TODO: Somehow refactor this out into map.something() - the code is\n            ////   pretty much the same as in GridLayer.\n            clip = new L.Bounds([\n                map.containerPointToLayerPoint([padMin.x, padMin.y]).floor(),\n                map.containerPointToLayerPoint([padMin.x, padMax.y]).floor(),\n                map.containerPointToLayerPoint([padMax.x, padMin.y]).floor(),\n                map.containerPointToLayerPoint([padMax.x, padMax.y]).floor()\n            ]);\n        //min = this._map.containerPointToLayerPoint(size.multiplyBy(-p)).round();\n\n        this._bounds = clip;\n        // this._topLeft = clip.min;\n        this._topLeft = this._map.layerPointToLatLng(clip.min);\n\n        this._center = this._map.getCenter();\n        this._zoom = this._map.getZoom();\n    },\n\n});\n","/**\n * L.SVG\n */\nconst svgProto = L.extend({}, L.SVG.prototype);\n\nL.SVG.include({\n\n    _update: function() {\n        svgProto._update.call(this);\n        if (this._map._rotate) {\n            this.fire('update');\n        }\n    },\n\n});\n","/**\n * L.Map\n */\nconst mapProto = L.extend({}, L.Map.prototype);\n\nL.Map.mergeOptions({ rotate: false, bearing: 0, });\n\nL.Map.include({\n\n    initialize: function(id, options) { // (HTMLElement or String, Object)\n        if (options.rotate) {\n            this._rotate = true;\n            this._bearing = 0;\n        }\n        mapProto.initialize.call(this, id, options);\n        if(this.options.rotate){\n          this.setBearing(this.options.bearing);\n        }\n    },\n\n    // createPane: function(name, container) {\n    //     if (!this._rotate || name == 'mapPane') {\n    //         return mapProto.createPane.call(this, name, container);\n    //     }\n    //     // init \"rotatePane\"\n    //     if (!this._rotatePane) {\n    //         // this._pivot = this.getSize().divideBy(2);\n    //         this._rotatePane = mapProto.createPane.call(this, 'rotatePane', this._mapPane);\n    //         L.DomUtil.setPosition(this._rotatePane, new L.Point(0, 0), this._bearing, this._pivot);\n    //     }\n    //     return mapProto.createPane.call(this, name, container || this._rotatePane);\n    // },\n\n    containerPointToLayerPoint: function(point) { // (Point)\n        if (!this._rotate) {\n            return mapProto.containerPointToLayerPoint.call(this, point);\n        }\n        return L.point(point)\n            .subtract(this._getMapPanePos())\n            .rotateFrom(-this._bearing, this._getRotatePanePos())\n            .subtract(this._getRotatePanePos());\n    },\n\n    getBounds: function() {\n        if (!this._rotate) {\n            return mapProto.getBounds.call(this);\n        }\n        var size = this.getSize();\n        var topleft = this.layerPointToLatLng(this.containerPointToLayerPoint([0, 0])),\n            topright = this.layerPointToLatLng(this.containerPointToLayerPoint([size.x, 0])),\n            bottomright = this.layerPointToLatLng(this.containerPointToLayerPoint([size.x, size.y])),\n            bottomleft = this.layerPointToLatLng(this.containerPointToLayerPoint([0, size.y]));\n\n        // Use LatLngBounds' build-in constructor that automatically extends the bounds to fit the passed points\n        return new L.LatLngBounds([topleft, topright, bottomright, bottomleft]);\n    },\n\n    layerPointToContainerPoint: function(point) { // (Point)\n        if (!this._rotate) {\n            return mapProto.layerPointToContainerPoint.call(this, point);\n        }\n        return L.point(point)\n            .add(this._getRotatePanePos())\n            .rotateFrom(this._bearing, this._getRotatePanePos())\n            .add(this._getMapPanePos());\n    },\n\n    // Rotation methods\n    // setBearing will work with just the 'theta' parameter.\n    setBearing: function(theta) {\n        if (!L.Browser.any3d || !this._rotate) { return; }\n\n        var rotatePanePos = this._getRotatePanePos();\n        var halfSize = this.getSize().divideBy(2);\n        this._pivot = this._getMapPanePos().clone().multiplyBy(-1).add(halfSize);\n\n        rotatePanePos = rotatePanePos.rotateFrom(-this._bearing, this._pivot);\n\n        this._bearing = theta * L.DomUtil.DEG_TO_RAD; // TODO: mod 360\n        this._rotatePanePos = rotatePanePos.rotateFrom(this._bearing, this._pivot);\n\n        L.DomUtil.setPosition(this._rotatePane, rotatePanePos, this._bearing, this._pivot);\n\n        this.fire('rotate');\n    },\n\n    getBearing: function() {\n        return this._bearing * L.DomUtil.RAD_TO_DEG;\n    },\n\n    _initPanes: function() {\n        var panes = this._panes = {};\n        this._paneRenderers = {};\n\n        // @section\n        //\n        // Panes are DOM elements used to control the ordering of layers on the map. You\n        // can access panes with [`map.getPane`](#map-getpane) or\n        // [`map.getPanes`](#map-getpanes) methods. New panes can be created with the\n        // [`map.createPane`](#map-createpane) method.\n        //\n        // Every map has the following default panes that differ only in zIndex.\n        //\n        // @pane mapPane: HTMLElement = 'auto'\n        // Pane that contains all other map panes\n\n        this._mapPane = this.createPane('mapPane', this._container);\n        L.DomUtil.setPosition(this._mapPane, new L.Point(0, 0));\n\n        if (this._rotate) {\n            this._rotatePane = this.createPane('rotatePane', this._mapPane);\n            this._norotatePane = this.createPane('norotatePane', this._mapPane);\n\n            // @pane tilePane: HTMLElement = 2\n            // Pane for tile layers\n            this.createPane('tilePane', this._rotatePane);\n            // @pane overlayPane: HTMLElement = 4\n            // Pane for overlays like polylines and polygons\n            this.createPane('overlayPane', this._rotatePane);\n\n            // @pane shadowPane: HTMLElement = 5\n            // Pane for overlay shadows (e.g. marker shadows)\n            this.createPane('shadowPane', this._norotatePane);\n            // @pane markerPane: HTMLElement = 6\n            // Pane for marker icons\n            this.createPane('markerPane', this._norotatePane);\n            // @pane tooltipPane: HTMLElement = 650\n            // Pane for tooltips.\n            this.createPane('tooltipPane', this._norotatePane);\n            // @pane popupPane: HTMLElement = 700\n            // Pane for popups.\n            this.createPane('popupPane', this._norotatePane);\n        } else {\n            // @pane tilePane: HTMLElement = 2\n            // Pane for tile layers\n            this.createPane('tilePane');\n            // @pane overlayPane: HTMLElement = 4\n            // Pane for overlays like polylines and polygons\n            this.createPane('overlayPane');\n            // @pane shadowPane: HTMLElement = 5\n            // Pane for overlay shadows (e.g. marker shadows)\n            this.createPane('shadowPane');\n            // @pane markerPane: HTMLElement = 6\n            // Pane for marker icons\n            this.createPane('markerPane');\n            // @pane tooltipPane: HTMLElement = 650\n            // Pane for tooltips.\n            this.createPane('tooltipPane');\n            // @pane popupPane: HTMLElement = 700\n            // Pane for popups.\n            this.createPane('popupPane');\n        }\n\n        if (!this.options.markerZoomAnimation) {\n            L.DomUtil.addClass(panes.markerPane, 'leaflet-zoom-hide');\n            L.DomUtil.addClass(panes.shadowPane, 'leaflet-zoom-hide');\n        }\n    },\n\n    // @method rotatedPointToMapPanePoint(point: Point): Point\n    // Converts a coordinate from the rotated pane reference system\n    // to the reference system of the not rotated map pane.\n    rotatedPointToMapPanePoint: function(point) {\n        return L.point(point).rotate(this._bearing)._add(this._getRotatePanePos());\n    },\n\n    // @method mapPanePointToRotatedPoint(point: Point): Point\n    // Converts a coordinate from the not rotated map pane reference system\n    // to the reference system of the rotated pane.\n    mapPanePointToRotatedPoint: function(point) {\n        return L.point(point)._subtract(this._getRotatePanePos()).rotate(-this._bearing);\n    },\n\n    // offset of the specified place to the current center in pixels\n    _getCenterOffset: function(latlng) {\n        var centerOffset = mapProto._getCenterOffset.call(this, latlng);\n        if (this._rotate) {\n            centerOffset = centerOffset.rotate(this._bearing);\n        }\n        return centerOffset;\n    },\n\n    _getRotatePanePos: function() {\n        return this._rotatePanePos || new L.Point(0, 0);\n    },\n\n    _getNewPixelOrigin: function(center, zoom) {\n        var viewHalf = this.getSize()._divideBy(2);\n        if (!this._rotate) {\n            mapProto._getNewPixelOrigin.call(this, center, zoom);\n        }\n        return this.project(center, zoom)\n            .rotate(this._bearing)\n            ._subtract(viewHalf)\n            ._add(this._getMapPanePos())\n            ._add(this._getRotatePanePos())\n            .rotate(-this._bearing)\n            ._round();\n    },\n\n    _handleGeolocationResponse: function(pos) {\n        var lat = pos.coords.latitude,\n            lng = pos.coords.longitude,\n            // TODO: use mapProto._handleGeolocationResponse\n            hdg = pos.coords.heading,\n            latlng = new L.LatLng(lat, lng),\n            bounds = latlng.toBounds(pos.coords.accuracy),\n            options = this._locateOptions;\n\n        if (options.setView) {\n            var zoom = this.getBoundsZoom(bounds);\n            this.setView(latlng, options.maxZoom ? Math.min(zoom, options.maxZoom) : zoom);\n        }\n\n        var data = {\n            latlng: latlng,\n            bounds: bounds,\n            timestamp: pos.timestamp,\n            // TODO: use mapProto._handleGeolocationResponse\n            heading: hdg\n        };\n\n        for (var i in pos.coords) {\n            if (typeof pos.coords[i] === 'number') {\n                data[i] = pos.coords[i];\n            }\n        }\n\n        // @event locationfound: LocationEvent\n        // Fired when geolocation (using the [`locate`](#map-locate) method)\n        // went successfully.\n        this.fire('locationfound', data);\n    },\n\n});\n","/*\n * L.Map.CompassBearing will rotate the map according to a smartphone's compass.\n */\n\nL.Map.CompassBearing = L.Handler.extend({\n\n    initialize: function(map) {\n        if (!window.DeviceOrientationEvent) {\n            this._capable = false;\n            return;\n        }\n        this._capable = true;\n        this._map = map;\n\n        this._throttled = L.Util.throttle(this._onDeviceOrientation, 1000, this);\n    },\n\n    addHooks: function() {\n        if (this._capable && this._map._rotate) {\n            L.DomEvent.on(window, 'deviceorientation', this._throttled, this);\n        }\n    },\n\n    removeHooks: function() {\n        if (this._capable && this._map._rotate) {\n            L.DomEvent.off(window, 'deviceorientation', this._throttled, this);\n        }\n    },\n\n    _onDeviceOrientation: function(event) {\n        if (event.alpha !== null) {\n            this._map.setBearing(event.alpha - window.orientation);\n        }\n    },\n\n});\n\n// @section Handlers\n// @property compassBearing: Handler\n// Compass bearing handler.\nL.Map.addInitHook('addHandler', 'compassBearing', L.Map.CompassBearing);\r\n","/*\n * L.Handler.ContainerMutation triggers `invalidateResize` when the map's DOM container mutates.\n */\n\n// @namespace Map\n// @section Interaction Options\nL.Map.mergeOptions({\n\n    // @option trackContainerMutation: Boolean = false\n    // Whether the map uses [mutation observers](https://developer.mozilla.org/docs/Web/API/MutationObserver)\n    // to detect changes in its container and trigger `invalidateSize`. Disabled\n    // by default due to support not being available in all web browsers.\n    trackContainerMutation: false\n\n});\n\nL.Map.ContainerMutation = L.Handler.extend({\n\n    addHooks: function() {\n        if (!L.Browser.mutation) {\n            return;\n        }\n\n        if (!this._observer) {\n            this._observer = new MutationObserver(L.Util.bind(this._onMutation, this));\n        }\n\n        this._observer.observe(this._map.getContainer(), {\n            childList: false,\n            attributes: true,\n            characterData: false,\n            subtree: false,\n            attributeFilter: ['style']\n        });\n    },\n\n    removeHooks: function() {\n        if (!L.Browser.mutation) {\n            return;\n        }\n        this._observer.disconnect();\n    },\n\n    _onMutation: function() {\n        this._map.invalidateSize();\n    },\n\n});\n\n// @section Handlers\n// @property containerMutation: Handler\n// Container mutation handler (disabled unless [`trackContainerMutation`](#map-trackcontainermutation) is set).\nL.Map.addInitHook('addHandler', 'trackContainerMutation', L.Map.ContainerMutation);\r\n","/*\n * L.Handler.TouchGestures is both TouchZoom plus TouchRotate.\n */\n\n// @namespace Map\n// @section Interaction Options\nL.Map.mergeOptions({\n\n    // @option bounceAtZoomLimits: Boolean = true\n    // Set it to false if you don't want the map to zoom beyond min/max zoom\n    // and then bounce back when pinch-zooming.\n    bounceAtZoomLimits: true,\n\n});\n\nL.Map.TouchGestures = L.Handler.extend({\n\n    initialize: function(map) {\n        this._map = map;\n        this.rotate = !!this._map.options.touchRotate;\n        this.zoom = !!this._map.options.touchZoom;\n    },\n\n    addHooks: function() {\n        L.DomEvent.on(this._map._container, 'touchstart', this._onTouchStart, this);\n    },\n\n    removeHooks: function() {\n        L.DomEvent.off(this._map._container, 'touchstart', this._onTouchStart, this);\n    },\n\n    _onTouchStart: function(e) {\n        var map = this._map;\n\n        if (!e.touches || e.touches.length !== 2 || map._animatingZoom || this._zooming || this._rotating) { return; }\n\n        var p1 = map.mouseEventToContainerPoint(e.touches[0]),\n            p2 = map.mouseEventToContainerPoint(e.touches[1]),\n            vector = p1.subtract(p2);\n\n        this._centerPoint = map.getSize()._divideBy(2);\n        this._startLatLng = map.containerPointToLatLng(this._centerPoint);\n\n        if (this.zoom) {\n            if (map.options.touchZoom !== 'center') {\n                this._pinchStartLatLng = map.containerPointToLatLng(p1.add(p2)._divideBy(2));\n            }\n            this._startDist = p1.distanceTo(p2);\n            this._startZoom = map.getZoom();\n            this._zooming = true;\n        } else {\n            this._zooming = false;\n        }\n\n        if (this.rotate) {\n            this._startTheta = Math.atan(vector.x / vector.y);\n            this._startBearing = map.getBearing();\n            if (vector.y < 0) { this._startBearing += 180; }\n            this._rotating = true;\n        } else {\n            this._rotating = false;\n        }\n\n        this._moved = false;\n\n        map.stop();\n\n        L.DomEvent\n            .on(document, 'touchmove', this._onTouchMove, this)\n            .on(document, 'touchend', this._onTouchEnd, this);\n\n        L.DomEvent.preventDefault(e);\n    },\n\n    _onTouchMove: function(e) {\n        if (!e.touches || e.touches.length !== 2 || !(this._zooming || this._rotating)) { return; }\n\n        var map = this._map,\n            p1 = map.mouseEventToContainerPoint(e.touches[0]),\n            p2 = map.mouseEventToContainerPoint(e.touches[1]),\n            vector = p1.subtract(p2),\n            scale = p1.distanceTo(p2) / this._startDist,\n            delta;\n\n        if (this._rotating) {\n            var theta = Math.atan(vector.x / vector.y);\n            var bearingDelta = (theta - this._startTheta) * L.DomUtil.RAD_TO_DEG;\n            if (vector.y < 0) { bearingDelta += 180; }\n            if (bearingDelta) {\n                /// TODO: The pivot should be the last touch point, but zoomAnimation manages to\n                ///   overwrite the rotate pane position. Maybe related to #3529.\n                map.setBearing(this._startBearing - bearingDelta);\n            }\n        }\n\n        if (this._zooming) {\n            this._zoom = map.getScaleZoom(scale, this._startZoom);\n\n            if (!map.options.bounceAtZoomLimits && (\n                    (this._zoom < map.getMinZoom() && scale < 1) ||\n                    (this._zoom > map.getMaxZoom() && scale > 1))) {\n                this._zoom = map._limitZoom(this._zoom);\n            }\n\n            if (map.options.touchZoom === 'center') {\n                this._center = this._startLatLng;\n                if (scale === 1) { return; }\n            } else {\n                // Get delta from pinch to center, so centerLatLng is delta applied to initial pinchLatLng\n                delta = p1._add(p2)._divideBy(2)._subtract(this._centerPoint);\n                if (scale === 1 && delta.x === 0 && delta.y === 0) { return; }\n\n                var alpha = -map.getBearing() * L.DomUtil.DEG_TO_RAD;\n\n                this._center = map.unproject(map.project(this._pinchStartLatLng).subtract(delta.rotate(alpha)));\n            }\n\n        }\n\n        if (!this._moved) {\n            map._moveStart(true);\n            this._moved = true;\n        }\n\n        L.Util.cancelAnimFrame(this._animRequest);\n\n        var moveFn = L.bind(map._move, map, this._center, this._zoom, { pinch: true, round: false });\n        this._animRequest = L.Util.requestAnimFrame(moveFn, this, true);\n\n        L.DomEvent.preventDefault(e);\n    },\n\n    _onTouchEnd: function() {\n        if (!this._moved || !this._zooming) {\n            this._zooming = false;\n            return;\n        }\n\n        this._zooming = false;\n        this._rotating = false;\n        L.Util.cancelAnimFrame(this._animRequest);\n\n        L.DomEvent\n            .off(document, 'touchmove', this._onTouchMove)\n            .off(document, 'touchend', this._onTouchEnd);\n\n        if (this.zoom) {\n            // Pinch updates GridLayers' levels only when snapZoom is off, so snapZoom becomes noUpdate.\n            if (this._map.options.zoomAnimation) {\n                this._map._animateZoom(this._center, this._map._limitZoom(this._zoom), true, this._map.options.snapZoom);\n            } else {\n                this._map._resetView(this._center, this._map._limitZoom(this._zoom));\n            }\n        }\n    },\n\n});\n\n// @section Handlers\n// @property touchGestures: Handler\n// Touch gestures handler.\nL.Map.addInitHook('addHandler', 'touchGestures', L.Map.TouchGestures);\r\n","/*\n * L.Handler.TouchRotate is used by L.Map to add two-finger rotation gestures.\n */\n\n// @namespace Map\n// @section Interaction Options\nL.Map.mergeOptions({\n\n    // @section Touch interaction options\n    // @option touchRotate: Boolean|String = *\n    // Whether the map can be rotated with a two-finger rotation gesture\n    touchRotate: false,\n\n});\n\nL.Map.TouchRotate = L.Handler.extend({\n\n    addHooks: function() {\n        this._map.touchGestures.enable();\n        this._map.touchGestures.rotate = true;\n    },\n\n    removeHooks: function() {\n        this._map.touchGestures.rotate = false;\n    },\n\n});\n\n// @section Handlers\n// @property touchZoom: Handler\n// Touch rotate handler.\nL.Map.addInitHook('addHandler', 'touchRotate', L.Map.TouchRotate);\r\n","/*\n * L.Handler.ShiftKeyRotate is used by L.Map to add shift-wheel rotation.\n */\n\n// @namespace Map\n// @section Interaction Options\nL.Map.mergeOptions({\n\n    // @section ShiftKey interaction options\n    // @option shiftKeyRotate: Boolean|String = *\n    // Whether the map can be rotated with a shit-wheel rotation\n    shiftKeyRotate: true,\n\n});\n\nL.Map.ShiftKeyRotate = L.Handler.extend({\n\n    addHooks: function() {\n        L.DomEvent.on(this._map._container, \"wheel\", this._handleShiftScroll, this);\n        // this._map.shiftKeyRotate.enable();\n        this._map.shiftKeyRotate.rotate = true;\n    },\n\n    removeHooks: function() {\n        L.DomEvent.off(this._map._container, \"wheel\", this._handleShiftScroll, this);\n        this._map.shiftKeyRotate.rotate = false;\n    },\n\n    _handleShiftScroll: function(e) {\n        if (e.shiftKey) {\n            e.preventDefault();\n            this._map.scrollWheelZoom.disable();\n            this._map.setBearing((this._map._bearing * L.DomUtil.RAD_TO_DEG) + e.deltaY);\n        } else {\n            this._map.scrollWheelZoom.enable();\n        }\n    },\n\n});\n\n// @section Handlers\n// @property touchZoom: Handler\n// Touch rotate handler.\nL.Map.addInitHook('addHandler', 'shiftKeyRotate', L.Map.ShiftKeyRotate);\n\n// decrease \"scrollWheelZoom\" handler priority over \"shiftKeyRotate\" handler\nL.Map.addInitHook(function() {\n    if (this.scrollWheelZoom.enabled() && this.shiftKeyRotate.enabled()) {\n        this.scrollWheelZoom.disable();\n        this.scrollWheelZoom.enable();\n    }\n});\n","/*\n * L.Handler.TouchZoom is used by L.Map to add pinch zoom on supported mobile browsers.\n */\n\n// @namespace Map\n// @section Interaction Options\nL.Map.mergeOptions({\n\n    // @section Touch interaction options\n    // @option touchZoom: Boolean|String = *\n    // Whether the map can be zoomed by touch-dragging with two fingers. If\n    // passed `'center'`, it will zoom to the center of the view regardless of\n    // where the touch events (fingers) were. Enabled for touch-capable web\n    // browsers except for old Androids.\n    touchZoom: L.Browser.touch && !L.Browser.android23,\n\n    bounceAtZoomLimits: false,\n});\n\nL.Map.TouchZoom = L.Handler.extend({\n\n    addHooks: function() {\n        L.DomUtil.addClass(this._map._container, 'leaflet-touch-zoom');\n        this._map.touchGestures.enable();\n        this._map.touchGestures.zoom = true;\n    },\n\n    removeHooks: function() {\n        L.DomUtil.removeClass(this._map._container, 'leaflet-touch-zoom');\n        this._map.touchGestures.zoom = false;\n    },\n\n});\n\n// @section Handlers\n// @property touchZoom: Handler\n// Touch zoom handler.\nL.Map.addInitHook('addHandler', 'touchZoom', L.Map.TouchZoom);\r\n","/**\n * L.Control.Rotate\n */\n\n// A tri-state control for map rotation. States are:\n// Locked (default)\n// Unlocked (user can pinch-rotate)\n// Follow (rotation follows device orientation, if available)\nL.Control.Rotate = L.Control.extend({\n\n    options: {\n        position: 'topleft',\n        closeOnZeroBearing: true\n    },\n\n    onAdd: function(map) {\n        this._onDeviceOrientation = L.Util.throttle(this._unthrottledOnDeviceOrientation, 100, this);\n\n        var container = this._container = L.DomUtil.create('div', 'leaflet-control-rotate leaflet-bar');\n\n        // this.button = L.Control.Zoom.prototype._createButton.call(this, 'R', 'leaflet-control-rotate', 'leaflet-control-rotate', container, this._toggleLock);\n\n        var arrow = this._arrow = L.DomUtil.create('span', 'leaflet-control-rotate-arrow');\n\n        arrow.style.backgroundImage = `url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg' fill='%23333'%3E%3Cpath d='M10.5 14l4-8 4 8h-8z'/%3E%3Cpath d='M10.5 16l4 8 4-8h-8z' fill='%23ccc'/%3E%3C/svg%3E\")`;\n        arrow.style.cursor = 'grab';\n        arrow.style.display = 'block';\n        arrow.style.width = '100%';\n        arrow.style.height = '100%';\n        arrow.style.backgroundRepeat = 'no-repeat';\n        arrow.style.backgroundPosition = '50%';\n\n        // Copy-pasted from L.Control.Zoom\n        var link = this._link = L.DomUtil.create('a', 'leaflet-control-rotate-toggle', container);\n        link.appendChild(arrow);\n        link.href = '#';\n        link.title = 'Rotate map';\n\n        L.DomEvent\n            .on(link, 'dblclick', L.DomEvent.stopPropagation)\n            .on(link, 'mousedown', this._handleMouseDown, this)\n            .on(link, 'click', L.DomEvent.stop)\n            .on(link, 'click', this._cycleState, this)\n            .on(link, 'click', this._refocusOnMap, this);\n\n        if (!L.Browser.any3d) {\n            L.DomUtil.addClass(link, 'leaflet-disabled');\n        }\n\n        this._restyle();\n\n        map.on('rotate', this._restyle.bind(this));\n\n        // State flag\n        this._follow = false;\n        this._canFollow = false;\n\n        if (this.options.closeOnZeroBearing && map.getBearing() === 0) {\n            container.style.display = 'none';\n        }\n\n        return container;\n    },\n\n    _handleMouseDown: function(e) {\n        L.DomEvent.stopPropagation(e);\n        this.dragging = true;\n        this.dragstartX = e.pageX;\n        this.dragstartY = e.pageY;\n        L.DomEvent\n            .on(document, 'mousemove', this._handleMouseDrag, this)\n            .on(document, 'mouseup', this._handleMouseUp, this);\n    },\n\n    _handleMouseUp: function(e) {\n        L.DomEvent.stopPropagation(e);\n        this.dragging = false;\n\n        L.DomEvent\n            .off(document, 'mousemove', this._handleMouseDrag, this)\n            .off(document, 'mouseup', this._handleMouseUp, this);\n    },\n\n    _handleMouseDrag: function(e) {\n        if (!this.dragging) { return; }\n        var deltaX = e.clientX - this.dragstartX;\n        this._map.setBearing(deltaX);\n    },\n\n    _cycleState: function(ev) {\n        var map = this._map;\n\n        if (!map) { return; }\n\n        if (!map.touchRotate.enabled() && !map.compassBearing.enabled()) {\n            // Go from disabled to touch\n            map.touchRotate.enable();\n\n            // console.log('state is now: touch rotate');\n        } else {\n\n            if (!map.compassBearing.enabled()) {\n                // Go from touch to compass\n                map.touchRotate.disable();\n                map.compassBearing.enable();\n\n                // console.log('state is now: compass');\n\n                // It is possible that compass is not supported. If so,\n                // the hangler will automatically go from compass to disabled.\n            } else {\n                // Go from compass to disabled\n                map.compassBearing.disable();\n\n                // console.log('state is now: locked');\n\n                map.setBearing(0);\n                if (this.options.closeOnZeroBearing) {\n                    map.touchRotate.enable();\n                }\n            }\n        }\n        this._restyle();\n    },\n\n    _restyle: function() {\n        if (this._map.options.rotate) {\n            var map = this._map;\n            var bearing = map.getBearing();\n            if (this.options.closeOnZeroBearing && bearing) {\n                this._container.style.display = 'block';\n            }\n\n            var cssTransform = 'rotate(' + bearing + 'deg)';\n            this._arrow.style.transform = cssTransform;\n\n            if (map.compassBearing.enabled()) {\n                this._link.style.backgroundColor = 'orange';\n            } else if (map.touchRotate.enabled()) {\n                this._link.style.backgroundColor = null;\n            } else {\n                this._link.style.backgroundColor = 'grey';\n                if (this.options.closeOnZeroBearing && map.getBearing() === 0) {\n                    this._container.style.display = 'none';\n                }\n            }\n        } else {\n            L.DomUtil.addClass(this._link, 'leaflet-disabled');\n        }\n    },\n\n});\n\nL.control.rotate = function(options) {\n    return new L.Control.Rotate(options);\n};\n\nL.Map.mergeOptions({\n    rotateControl: true,\n});\n\nL.Map.addInitHook(function() {\n    if (this.options.rotateControl) {\n        var options = typeof this.options.rotateControl === 'object' ? this.options.rotateControl : {};\n        this.rotateControl = L.control.rotate(options);\n        this.addControl(this.rotateControl);\n    }\n});\r\n"],"names":["domUtilProto","L","extend","DomUtil","setTransform","el","offset","scale","bearing","pivot","pos","Point","_round","call","this","rotateFrom","style","TRANSFORM","x","y","setPosition","point","_leaflet_pos","Browser","any3d","undefined","left","top","DEG_TO_RAD","Math","PI","RAD_TO_DEG","Draggable","include","updateMapBearing","mapBearing","_mapBearing","prototype","rotate","theta","sinTheta","sin","cosTheta","cos","cx","cy","divOverlayProto","DivOverlay","getEvents","_updatePosition","_map","latLngToLayerPoint","_latlng","options","anchor","_getAnchor","_zoomAnimated","_rotate","rotatedPointToMapPanePoint","_container","add","bottom","_containerBottom","_containerLeft","round","_containerWidth","popupProto","Popup","_animateZoom","e","_latLngToNewLayerPoint","zoom","center","_adjustPan","autoPan","_panAnim","_inProgress","map","marginBottom","parseInt","getStyle","containerHeight","offsetHeight","containerWidth","layerPos","_add","getPosition","containerPos","_getMapPanePos","padding","autoPanPadding","paddingTL","autoPanPaddingTopLeft","paddingBR","autoPanPaddingBottomRight","size","getSize","dx","dy","fire","panBy","tooltipProto","Tooltip","_setPosition","Icon","markerDragProto","_setIconStyles","img","name","sizeOption","shadowAnchor","iconAnchor","divideBy","className","marginLeft","marginTop","width","height","MarkerDrag","_onDragStart","_marker","_draggable","_bearing","_onDrag","marker","rotated_marker","rotation","rotateWithView","shadow","_shadow","iconPos","_icon","mapPanePointToRotatedPoint","latlng","layerPointToLatLng","oldLatLng","_oldLatLng","setLatLng","_onDragEnd","update","markerProto","Marker","mergeOptions","onAdd","on","_initInteraction","ret","dragging","Object","getPrototypeOf","bind","disable","enable","_setPos","_zIndex","zIndexOffset","_resetZIndex","_updateZIndex","zIndex","setRotation","gridLayerProto","GridLayer","events","updateWhenIdle","_onRotate","Util","throttle","_onMoveEnd","updateInterval","_getTiledPixelBounds","mapZoom","_animatingZoom","max","_animateToZoom","getZoom","getZoomScale","_tileZoom","pixelCenter","project","floor","halfSize","Bounds","containerPointToLayerPoint","subtract","canvasProto","Canvas","_redraw","onRemove","off","_update","rendererProto","Renderer","_updateTransform","_zoom","_topLeft","p","padMin","multiplyBy","padMax","clip","_bounds","min","_center","getCenter","svgProto","SVG","mapProto","Map","initialize","id","setBearing","_getRotatePanePos","getBounds","topleft","topright","bottomright","bottomleft","LatLngBounds","layerPointToContainerPoint","rotatePanePos","_pivot","clone","_rotatePanePos","_rotatePane","getBearing","_initPanes","panes","_panes","_paneRenderers","_mapPane","createPane","_norotatePane","markerZoomAnimation","addClass","markerPane","shadowPane","_subtract","_getCenterOffset","centerOffset","_getNewPixelOrigin","viewHalf","_divideBy","_handleGeolocationResponse","lat","coords","latitude","lng","longitude","hdg","heading","LatLng","bounds","toBounds","accuracy","_locateOptions","setView","getBoundsZoom","maxZoom","data","timestamp","i","CompassBearing","Handler","window","DeviceOrientationEvent","_capable","_throttled","_onDeviceOrientation","addHooks","DomEvent","removeHooks","event","alpha","orientation","addInitHook","trackContainerMutation","ContainerMutation","mutation","_observer","MutationObserver","_onMutation","observe","getContainer","childList","attributes","characterData","subtree","attributeFilter","disconnect","invalidateSize","bounceAtZoomLimits","TouchGestures","touchRotate","touchZoom","_onTouchStart","touches","length","_zooming","_rotating","p1","mouseEventToContainerPoint","p2","vector","_centerPoint","_startLatLng","containerPointToLatLng","_pinchStartLatLng","_startDist","distanceTo","_startZoom","_startTheta","atan","_startBearing","_moved","stop","document","_onTouchMove","_onTouchEnd","preventDefault","delta","bearingDelta","getScaleZoom","getMinZoom","getMaxZoom","_limitZoom","unproject","_moveStart","cancelAnimFrame","_animRequest","moveFn","_move","pinch","requestAnimFrame","zoomAnimation","snapZoom","_resetView","TouchRotate","touchGestures","shiftKeyRotate","ShiftKeyRotate","_handleShiftScroll","shiftKey","scrollWheelZoom","deltaY","enabled","touch","android23","TouchZoom","removeClass","Control","Rotate","position","closeOnZeroBearing","_unthrottledOnDeviceOrientation","container","create","arrow","_arrow","backgroundImage","cursor","display","backgroundRepeat","backgroundPosition","link","_link","appendChild","href","title","stopPropagation","_handleMouseDown","_cycleState","_refocusOnMap","_restyle","_follow","_canFollow","dragstartX","pageX","dragstartY","pageY","_handleMouseDrag","_handleMouseUp","deltaX","clientX","ev","compassBearing","cssTransform","transform","backgroundColor","control","rotateControl","addControl"],"mappings":"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"}